{
    "collab_server" : "",
    "contents" : "library(DESeq2)\n\n\ndata<-read.csv(\"/Users/stalenygard/ulven/Raw.Counts.Matrix_NumReads.csv\")\ntpm<-read.csv(\"/Users/stalenygard/ulven/Raw.Counts.Matrix_TPM.csv\")\npheno<-read.csv(\"/Users/stalenygard/ulven/Phenotype_Table.csv\",sep=\"\\t\")\nnavn<-substring(gsub(\".KF.\",\"-KF-\",names(data)),2)[-1]\nix<-match(navn,as.character(pheno[,1]))\npheno<-pheno[ix,]\npheno$ID<-as.factor(pheno$ID)\npheno$Treatment<-as.factor(pheno$Treatment)\npheno$Group<-as.factor(pheno$Group)\npheno\nl<-strsplit(as.character(data[,1]),\"\\\\|\")\nL<-do.call(rbind, l)\nD<-data[,-1]\nrow.names(D)<-make.names(L[,6],unique=TRUE)\nTPM<-tpm[,-1]\n\ngenes<-unique(L[,6])\nB.counts<-matrix(0,length(genes),ncol(data)-1)\nB.tpm<-matrix(0,length(genes),ncol(data)-1)\nfor (i in 1:length(genes)){\n\tprint(i)\n\tix<-which(L[,6]==genes[i])\n\tB.counts[i,]<-apply(D[ix,],2,sum)\n\tB.tpm[i,]<-apply(TPM[ix,],2,sum)\n}\n\nrow.names(B.counts)<-row.names(B.tpm)<-genes\n\noutfiles<-c(\"deseq-lrt-genewise-plots-top200-group1.pdf\",\"deseq-lrt-genewise-plots-top200-group2.pdf\",\"deseq-lrt-genewise-plots-top200-group3.pdf\")\nM<-100\nfor (k in 1:3){\n\tpdf(outfiles[k])\n\tix<-which(pheno$Group==k)\n\tdds <- DESeqDataSetFromMatrix(countData = round(D[,ix]),\n                              colData = pheno[ix,],\n                              design = ~ ID+Treatment)\n\tdds<-DESeq(dds)\n\t#dds<-DESeq(dds,test=\"LRT\",reduced= ~ID)\n\t#plotDispEsts(dds)  \n\tdeseq.res.lrt<-results(dds,name=\"Treatment_V4_vs_V0\")\n\to<-order(deseq.res$padj)\n\tcounts2<-counts(dds,normalized=TRUE)\n\tfor (m in 1:M){\n\t\tplot(as.numeric(counts2[o[m],]),pch=20,ylab=\"Read counts\",xlab=\"Sample\")\n\t\tfor (l in 1:11) lines((l*2-1):(l*2),as.numeric(counts2[o[m],])[(l*2-1):(l*2)],col=l,type=\"l\")\n\t\tlegend(\"topleft\",paste(row.names(deseq.res)[o[m]],\"q-val =\",format(deseq.res$padj[o[m]],digits=2)))\n\t}\n\t#nb.res <- glm.nb(counts(dds,normalized=TRUE)[o[10],]~pheno[ix,2]+pheno[ix,4])\n\t#coef(summary(nb.res))\n\t\n\tgraphics.off()\n}\n\n\nix<-which(pheno$Group==1)\ndds <- DESeqDataSetFromMatrix(countData = round(D[,ix]),\n                              colData = pheno[ix,],\n                              design = ~ ID+Treatment)\ndds<-DESeq(dds)\ndeseq.res<-results(dds,name=\"Treatment_V4_vs_V0\")\no<-order(deseq.res$padj)\ncounts2<-counts(dds,normalized=TRUE)\n\npdf(\"dds.pdf\")\nplotDispEsts(dds)\npoints(unlist(mcols(dds)[o[1],c(1,4)]),col=\"green\",cex=3)\ngraphics.off()\n\n\nmu<-mcols(dds)[o[1],]$baseMean\nsize<-1/mcols(dds)[o[1],]$dispGeneEst\n(mu + mu^2/size)\nmcols(dds)[o[1],]$baseVar\n\ntheta.hat<-mcols(dds)[o[1],]$Treatment_V4_vs_V0\nse.theta.hat<-mcols(dds)[o[1],]$SE_Treatment_V4_vs_V0\nwald<-theta.hat/se.theta.hat\nwald\nmcols(dds)[o[1],]$WaldStatistic_Treatment_V4_vs_V0\n\n\nix<-which(pheno$Group==1)\ndds <- DESeqDataSetFromMatrix(countData = round(B.counts[,ix]),\n                              colData = pheno[ix,],\n                              design = ~ ID+Treatment)\n#dds <- estimateSizeFactors(dds)\n#dds <- estimateDispersions(dds)\n#dds <- nbinomWaldTest(dds)\ndebugonce(DESeq2:::fitBeta)\ndds<-DESeq(dds)\ndeseq.res<-results(dds,name=\"Treatment_V4_vs_V0\")\no<-order(deseq.res$padj)\ncounts2<-counts(dds,normalize=TRUE)\ncounts2[o[1],]\n\n\nplotDispEsts(dds)\npoints(x=mcols(dds)[o[1],]$baseMean,y=mcols(dds)[o[1],]$dispGeneEst,col=\"brown\",cex=3,pch=3)\npoints(x=mcols(dds)[o[1],]$baseMean,y=mcols(dds)[o[1],]$dispFit,col=\"brown\",cex=3,pch=4)\n\n\nmcols(dds)[o[1],]$Treatment_V4_vs_V0\nmean(counts(dds,normalized=TRUE)[o[1],which(pheno[ix,4]==\"V4\")])-\nmean(counts(dds,normalized=TRUE)[o[1],which(pheno[ix,4]==\"V0\")])\nmcols(dds)[o[1],]$SE_Treatment_V4_vs_V0\nmcols(dds)[o[1],]$Treatment_V4_vs_V0/mcols(dds)[o[1],]$SE_Treatment_V4_vs_V0\nmcols(dds)[o[1],]$WaldStatistic_Treatment_V4_vs_V0\nmcols(dds)[o[1],]$WaldPvalue_Treatment_V4_vs_V0\nmcols(dds)[o[1],]$baseVar\nmcols(dds)[o[1],]$baseMean+mcols(dds)[o[1],]$dispersion*mcols(dds)[o[1],]$baseMean^2\nsqrt(mcols(dds)[o[1],]$baseVar)/sqrt(22)\nmcols(dds)[o[1],]$SE_Treatment_V4_vs_V0\n\n\n\nbetaMatrix<- matrix(log2(rowMeans(counts(dds, normalized=TRUE))),ncol=1)\nstr(betaMatrix)\nbetaMatrix[o[1],]\nnormalizationFactors <- getSizeOrNormFactors(dds)\nmu <- normalizationFactors * as.numeric(2^betaMatrix)\nmu[o[1]]\nmcols(dds)[o[1],1]\nalpha_hat <- dispersions(dds)\nw<-(mu^-1 + alpha)^-1\n\nres.test<-glm.nb(counts(dds)[o[1],]~pheno[ix,2]+pheno[ix,4])\ncoef(summary(res.test))\nres.test<-glm.nb(counts(dds)[o[1],]~ind+pheno[ix,4])\ncoef(summary(res.test))\nind<-factor(rep(1:11,each=2))\ntreatment<-factor(rep(1:2,11))\nres<-glm.nb(c(0,0,1298.156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)~ind+treatment)\ncoef(summary(res))\nres<-glm.nb(counts(dds)[o[1],]~factor(rep(1:11,each=2))+factor(rep(1:2,11)))\ncoef(summary(res))\n\n\nres.test<-glm.nb(counts(dds)[o[1],]~pheno[ix,2]+pheno[ix,4],control=glm.control(maxit =1000))\n\n\n",
    "created" : 1561462503685.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2491278192",
    "id" : "AB16AD05",
    "lastKnownWriteTime" : 1558699332,
    "last_content_update" : 1558699332,
    "path" : "~/ulven/krill-gene_wise-cmd-testing.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}