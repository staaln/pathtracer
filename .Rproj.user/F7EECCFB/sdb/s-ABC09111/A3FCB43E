{
    "collab_server" : "",
    "contents" : "library(DESeq2)\nlibrary(lme4)\nsetwd(\"/Users/stalenygard/ulven/\")\ndata<-read.csv(\"/Users/stalenygard/ulven/Raw.Counts.Matrix_NumReads.csv\")\npheno<-read.csv(\"/Users/stalenygard/ulven/Phenotype_Table.csv\",sep=\"\\t\")\nnavn<-substring(gsub(\".KF.\",\"-KF-\",names(data)),2)[-1]\nix<-match(navn,as.character(pheno[,1]))\npheno<-pheno[ix,]\npheno$ID<-as.factor(pheno$ID)\npheno$Treatment<-as.factor(pheno$Treatment)\npheno$Group<-as.factor(pheno$Group)\npheno\nl<-strsplit(as.character(data[,1]),\"\\\\|\")\nL<-do.call(rbind, l)\nD<-data[,-1]\nrow.names(D)<-make.names(L[,6],unique=TRUE)\nix<-which(pheno$Group==1 | pheno$Group==2)\n\ngenes<-unique(L[,6])\nB.counts<-matrix(0,length(genes),ncol(data)-1)\nfor (i in 1:length(genes)){\n  print(i)\n  ix<-which(L[,6]==genes[i])\n  B.counts[i,]<-apply(D[ix,],2,sum)\n}\nrow.names(B.counts)<-row.names(B.tpm)<-genes\n\nix<-which(pheno$Group==1 | pheno$Group==2 | pheno$Group==3)\nP<-pheno[ix,]\ndds <- DESeqDataSetFromMatrix(countData = round(B.counts[,ix]),\n                              colData = pheno[ix,],\n                              design = ~ ID+Treatment)\ndds<-estimateSizeFactors(dds)\nB.norm<-counts(dds,normalize=TRUE)\nixx<-which(apply(B.norm,1,median)>0)\nB<-B.norm[ixx,]\nnn<-nrow(B)\ndim(B)\nlibrary(doMC)\nregisterDoMC(cores=4)\nwrite.table(i,file=\"ut_i.txt\")\nsystem.time({\n  p <- foreach(i = 1:nn, .combine=c) %dopar% {\n    write.table(i,file=\"ut_i.txt\",append=TRUE,row.names=FALSE,col.names=FALSE,quote=FALSE)\n    test<-glmer.nb(as.numeric(B[i,])~P$Group+P$Treatment+P$Group*P$Treatment+(1|P$ID),\n                   control=glmerControl(optimizer = \"bobyqa\",optCtrl=list(maxfun=1e20)))\n    print(i)\n    coef(summary(test))[5:6,4]\n  }\n})\np.ctrl.fish<-p[seq(1,length(p),2)]\np.krill.fish<-p[seq(2,length(p),2)]\nfdr.ctrl.fish<-p.adjust(p.ctrl.fish,\"fdr\")\nfdr.krill.fish<-p.adjust(p.krill.fish,\"fdr\")\no<-order(p.ctrl.fish)\nhist(p.ctrl.fish,100)\nhist(p.krill.fish,100)\n#genes2<-genes[(1:12000)[-c(3191)]]\ngenes2<-genes\n#BB<-B[(1:12000)[-c(3191)],]\nBB<-B\n\no<-order(p.ctrl.fish)\npdf(\"Gene-plots-top100-fish_vs_control-glmernb.pdf\")\nfor (i in 1:100){\n  k<-o[i]\n  v1<-which(P$Group==1 & P$Treatment==\"V0\")\n  v2<-which(P$Group==1 & P$Treatment==\"V4\")\n  plot(c(1,2),c(BB[k,v1[1]],BB[k,v2[1]]),ylim=c(0,max(BB[k,])),xlim=c(0.5,4.5),\n       main=paste(\"Gene:\",as.character(genes2[k])),xlab=\"\",ylab=\"Normalized count\",xaxt=\"n\",pch=\"\")\n  par(cex=0.7)\n  axis(side=1,at=1:4,labels=c(\"Fish, before\",\"Fish, after\",\"Control, before\",\"Control, after\"),\n       las=2)\n  par(cex=1)\n  for (i in 1:length(v1)) lines(c(1,2),c(BB[k,v1[i]],BB[k,v2[i]]))\n  lines(c(1,2),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col=\"blue\")\n  v1<-which(P$Group==2 & P$Treatment==\"V0\")\n  v2<-which(P$Group==2 & P$Treatment==\"V4\")\n  for (i in 1:length(v1)) lines(c(3,4),c(BB[k,v1[i]],BB[k,v2[i]]))\n  lines(c(3,4),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col=\"blue\")\n  legend(\"topright\",c(paste(\"p=\",format(p.ctrl.fish[k],digits=1)),c(paste(\"fdr=\",format(fdr.ctrl.fish[k],digits=1)))))\n}\ngraphics.off()\nwrite.table(genes[o[1:500]],file=\"sig-genes-fish-vs-ctrl.txt\",sep=\"\\t\",row.names=FALSE,col.names=FALSE,quote=FALSE)\n  #w1<-B[k,v2]-B[k,v1]\n  #v1<-which(P$Group==2 & P$Treatment==\"V0\")\n  #v2<-which(P$Group==2 & P$Treatment==\"V4\")\n  #w2<-B[k,v2]-B[k,v1]\n  #ww<-c(w1,w2)\n  #plot(rep(1,length(w1)),w1,xlim=c(0,3),ylim=c(min(ww),max(ww)),\n  #   xaxt=\"n\",pch=20,col=\"red\",main=paste(\"Gene symbol:\",as.character(genes[k])),xlab=\"\",ylab=\"Expression value\\n after-before\")\n  #points(rep(2,length(w2)),w2,pch=20)\n  #axis(side=1,at=c(1,2),labels=c(\"Group1\",\"Group2\"))\n  #legend(\"topright\",c(paste(\"p=\",format(p[k],digits=1)),c(paste(\"fdr=\",format(fdr[k],digits=1)))))\n#}\n#graphics.off()\npdf(\"Gene-plots-top100-krill_vs_fish-glmernb.pdf\")\no<-order(p.krill.fish)\nfor (i in 1:100){\n  k<-o[i]\n  v1<-which(P$Group==1 & P$Treatment==\"V0\")\n  v2<-which(P$Group==1 & P$Treatment==\"V4\")\n  plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),\n       main=paste(\"Gene:\",as.character(genes[k])),xlab=\"\",ylab=\"Normalized count\",xaxt=\"n\",pch=\"\")\n  par(cex=0.7)\n  axis(side=1,at=1:4,labels=c(\"Fish, before\",\"Fish, after\",\"Control, before\",\"Control, after\"),\n       las=2)\n  par(cex=1)\n  for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))\n  lines(c(1,2),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col=\"blue\")\n  v1<-which(P$Group==2 & P$Treatment==\"V0\")\n  v2<-which(P$Group==2 & P$Treatment==\"V4\")\n  for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))\n  lines(c(3,4),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col=\"blue\")\n  legend(\"topright\",c(paste(\"p=\",format(p.krill.fish[k],digits=1)),c(paste(\"fdr=\",format(fdr.krill.fish[k],digits=1)))))\n}\ngraphics.off()\n\n\nix<-which(pheno$Group==3 | pheno$Group==2)\nP<-pheno[ix,]\ndds <- DESeqDataSetFromMatrix(countData = round(B.counts[,ix]),\n                              colData = pheno[ix,],\n                              design = ~ ID+Treatment)\ndds<-estimateSizeFactors(dds)\nB.norm<-counts(dds,normalize=TRUE)\nixx<-which(apply(B.norm,1,median)>0)\nB<-B.norm[ixx,]\nnn<-nrow(B)\ndim(B)\nlibrary(doMC)\nregisterDoMC(cores=4)\nsystem.time({\n  p <- foreach(i = 1:nn, .combine=c) %dopar% {\n    test<-glmer.nb(as.numeric(B[i,])~P$Group+P$Treatment+P$Group*P$Treatment+(1|P$ID),\n                   control=glmerControl(optimizer=\"bobyqa\",optCtrl=list(maxfun=1e10)))\n    print(i)\n    coef(summary(test))[4,4]\n  }\n})\nfdr<-p.adjust(p,\"fdr\")\no<-order(p)\nhist(p,100)\npdf(\"Gene-plots-top100-krill_vs_control-glmernb.pdf\")\nfor (i in 1:100){\n  k<-o[i]\n  v1<-which(P$Group==3 & P$Treatment==\"V0\")\n  v2<-which(P$Group==3 & P$Treatment==\"V4\")\n  plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),\n       main=paste(\"Gene:\",as.character(genes[k])),xlab=\"\",ylab=\"Normalized count\",xaxt=\"n\")\n  axis(side=1,at=1:4,labels=c(\"Fish, before\",\"Fish, after\",\"Control, before\",\"Control, after\"),\n       las=2,cex=.7)\n  for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))\n  v1<-which(P$Group==2 & P$Treatment==\"V0\")\n  v2<-which(P$Group==2 & P$Treatment==\"V4\")\n  for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))\n  legend(\"topright\",c(paste(\"p=\",format(p[k],digits=1)),c(paste(\"fdr=\",format(fdr[k],digits=1)))))\n}\ngraphics.off()\n\nix<-which(pheno$Group==3 | pheno$Group==1)\nP<-pheno[ix,]\ndds <- DESeqDataSetFromMatrix(countData = round(B.counts[,ix]),\n                              colData = pheno[ix,],\n                              design = ~ ID+Treatment)\ndds<-estimateSizeFactors(dds)\nB.norm<-counts(dds,normalize=TRUE)\nixx<-which(apply(B.norm,1,median)>0)\nB<-B.norm[ixx,]\nnn<-nrow(B)\ndim(B)\nlibrary(doMC)\nregisterDoMC(cores=4)\nsystem.time({\n  p <- foreach(i = 1:nn, .combine=c) %dopar% {\n    test<-glmer.nb(as.numeric(B[i,])~P$Group+P$Treatment+P$Group*P$Treatment+(1|P$ID),\n                   control=glmerControl(optimizer=\"bobyqa\",optCtrl=list(maxfun=1e10)))\n    print(i)\n    coef(summary(test))[4,4]\n  }\n})\nfdr<-p.adjust(p,\"fdr\")\no<-order(p)\nhist(p,100)\npdf(\"Gene-plots-top100-krill_vs_fish-glmernb.pdf\")\nfor (i in 1:100){\n  k<-o[i]\n  v1<-which(P$Group==3 & P$Treatment==\"V0\")\n  v2<-which(P$Group==3 & P$Treatment==\"V4\")\n  plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),\n       main=paste(\"Gene:\",as.character(genes[k])),xlab=\"\",ylab=\"Normalized count\",xaxt=\"n\")\n  axis(side=1,at=1:4,labels=c(\"Fish, before\",\"Fish, after\",\"Control, before\",\"Control, after\"),\n       las=2,cex=.7)\n  for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))\n  v1<-which(P$Group==1 & P$Treatment==\"V0\")\n  v2<-which(P$Group==1 & P$Treatment==\"V4\")\n  for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))\n  legend(\"topright\",c(paste(\"p=\",format(p[k],digits=1)),c(paste(\"fdr=\",format(fdr[k],digits=1)))))\n}\ngraphics.off()\n\n\n\n\n\n\n",
    "created" : 1561464320726.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1538753028",
    "id" : "A3FCB43E",
    "lastKnownWriteTime" : 1561669414,
    "last_content_update" : 1561669414986,
    "path" : "~/ulven/glmer-cmd-2.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}