X<-R[w,]
pdf("../heatmap-clust2.pdf")
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
v<-which(clust.res$rowgroup==3)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf("../heatmap-clust3.pdf")
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
v<-which(clust.res$rowgroup==4)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf("../heatmap-clust4.pdf")
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
X<-R
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
clust.res<-subclust(10,clust="row")
for (i in 1:10){
v<-which(clust.res$rowgroup==4)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf(paste("../heatmap-clust-",i,".pdf",sep=""))
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
}
for (i in 1:10){
v<-which(clust.res$rowgroup==i)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf(paste("../heatmap-clust-",i,".pdf",sep=""))
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
}
X<-R
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
clust.res<-subclust(10,clust="row")
for (i in 1:10){
v<-which(clust.res$rowgroup==i)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf(paste("../heatmap-clust-",i,".pdf",sep=""))
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
}
v<-which(clust.res$rowgroup==i)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
v<-which(clust.res$rowgroup==2)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
ress<-subclust(4, clust="row")
table(ress$rowgroup)
ress$rowgroup
names(ress$rowgroup[ress$rowgroup==1])
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(ress$rowgroup[ress$rowgroup==1]),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go1=goseq(pwf,"hg19","geneSymbol")
names(ress$rowgroup[ress$rowgroup==1])
go1[1:10,]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(ress$rowgroup[ress$rowgroup==2]),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go2=goseq(pwf,"hg19","geneSymbol")
go2[1:10,]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(ress$rowgroup[ress$rowgroup==3]),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go3=goseq(pwf,"hg19","geneSymbol")
go3[1:10,]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(ress$rowgroup[ress$rowgroup==4]),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go4=goseq(pwf,"hg19","geneSymbol")
go4[1:10,]
for (i in 1:20){
v<-which(clust.res$rowgroup==i)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf(paste("../heatmap-clust-",i,".pdf",sep=""))
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
}
X<-R
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
clust.res<-subclust(20,clust="row")
for (i in 1:20){
v<-which(clust.res$rowgroup==i)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf(paste("../heatmap-clust-",i,".pdf",sep=""))
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
}
for (i in 1:30){
v<-which(clust.res$rowgroup==i)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf(paste("../heatmap-clust-",i,".pdf",sep=""))
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
}
X<-R
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
clust.res<-subclust(30,clust="row")
for (i in 1:30){
v<-which(clust.res$rowgroup==i)
w<-match(as.character(names(v)),row.names(R))
X<-R[w,]
pdf(paste("../heatmap-clust-",i,".pdf",sep=""))
plot.init(tree=c(2,3), cbar=7, text=4, inner=c(0,0,0.2,0.2))
hcluster(X, clust="col", dist="euclidean", linkage="ward.D")
hcluster(X, clust="row", dist="euclidean", linkage="ward.D")
#hcluster(X, clust="col", dist="euclidean", linkage="complete")
#hcluster(X, clust="row", dist="euclidean", linkage="complete")
#subclust(NA, B=5, clust="col", method="part", min.size=10)#samples #B=50 og GAP som standard, ha gjerne 200 før publikasjon. Start med GAP, evt PART dersom du ser noen subtrær som ikke er plukket opp.
#subclust(NA, B=5, clust="row", method="part", min.size=10)#pathways
#subclust(5, clust="col")
subclust(4, clust="row")
#plot.hmap(X)
plot.hmap(X, colorscale = "grey-white-red")
plot.tree(side=2)
plot.tree(side=3)
plot.text(row.names(X), side=2, sep.outer=0, cex=0.1, maxchar=NA)
plot.text(colnames(X), side=1, sep.outer=0, cex=0.5,maxchar=NA)
plot.cbar(list(z1,z2,z3,z4,z.alk,z.atrx,z.ort51,z.chek2,z.tp53,z.palb2,z.phox2b), pvalue=T, pval.digits=2,border=NA, side=3, cex=0.8)
graphics.off()
}
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(clust.res$rowgroup[clust.res$rowgroup==7]),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
go1[1:10,]
go1[1:20,]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(clust.res$rowgroup[clust.res$rowgroup==7]),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(fdr<0.5)]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(rownames(X)[which(p<0.05)])],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(rownames(X)[which(p<0.05)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go1[1:10,]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(ress$rowgroup[ress$rowgroup==2]),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go2=goseq(pwf,"hg19","geneSymbol")
go2[1:10,]
go1[1:10,]
go2[1:10,]
go3[1:10,]
go4[1:10,]
go4[1:20,]
coef(res.lasso)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(names(coef(res.lasso)),names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(fdr<0.5)]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
P[1,]
P[1:10,]
res<-lm(y~P[i,],family="binomial")
i
i<-1
res<-lm(y~P[i,],family="binomial")
?lm
res<-glm(y~P[i,],family="binomial")
p[i]<-summary(coef(res))
summary(coef(res))
coef(summary(res))
coef(summary(res))[2,4]
p<-vector("numeric")
for (i in 1:nrow(R)){
res<-glm(y~P[i,],family="binomial")
p[i]<-coef(summary(res))[2,4]
}
hist(p)
hist(p,100)
hist(p,100)
which(p<0.05)
which(p<0.1)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(colnames(R)[which(p<0.2)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(fdr<0.5)]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(colnames(R)[which(p<0.2)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
p<-vector("numeric")
for (i in 1:nrow(R)){
A<-matrix(0,2,2)
A[1,1]<-length(which(y==0 & R[i,]==0))
A[1,2]<-length(which(y==0 & R[i,]==1))
A[2,1]<-length(which(y==1 & R[i,]==0))
A[2,2]<-length(which(y==1 & R[i,]==1))
p[i]<-(fisher.test(A)$p.val)
}
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(colnames(R)[which(p<0.05)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
p<-rep(NA,nrow(X))
for (i in 1:nrow(X)) p[i]<-cor.test(y,X[i,])$p.val
hist(p)
fdr<-p.adjust(p,"fdr")
row.names(X)[which(fdr<0.5)]
p<-rep(NA,nrow(X))
for (i in 1:nrow(X)) p[i]<-cor.test(y,P[i,])$p.val
hist(p)
fdr<-p.adjust(p,"fdr")
row.names(X)[which(fdr<0.5)]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(colnames(R)[which(fdr<0.1)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(colnames(R)[which(fdr<0.5)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
table(all.genes)
all.genes[1:10]
which(fdr<0.5)
all.genes[match(colnames(R)[which(fdr<0.5)],names(all.genes))]<-1
table(all.genes)
colnames(R)[which(fdr<0.5)]
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(rownames(R)[which(fdr<0.5)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
p<-vector("numeric")
for (i in 1:nrow(R)){
A<-matrix(0,2,2)
A[1,1]<-length(which(y==0 & R[i,]==0))
A[1,2]<-length(which(y==0 & R[i,]==1))
A[2,1]<-length(which(y==1 & R[i,]==0))
A[2,2]<-length(which(y==1 & R[i,]==1))
p[i]<-(fisher.test(A)$p.val)
}
library(org.Hs.eg.db)
#xx <- as.list(org.Hs.egENSEMBL2EG)
x2 <- as.list(org.Hs.egSYMBOL2EG)
all.genes<-unlist(x2)
all.genes[1:length(all.genes)]<-0
all.genes[match(rownames(R)[which(p<0.05)],names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(x2))
all.genes<-all.genes[-which(duplicated(names(all.genes)))]
pwf=nullp(all.genes,"hg19","geneSymbol")
go=goseq(pwf,"hg19","geneSymbol")
go[1:10,]
