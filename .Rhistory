ixx<-which(apply(B.norm,1,median)>0)
B<-B.norm[ixx,]
nn<-nrow(B)
dim(B)
test<-glmer.nb(as.numeric(B[i,])~P$Group+P$Treatment+P$Group*P$Treatment+(1|P$ID),
control=glmerControl(optimizer = "bobyqa",optCtrl=list(maxfun=1e20)))
i
library(doMC)
registerDoMC(cores=4)
system.time({
p <- foreach(i = 1:nn, .combine=c) %dopar% {
write.table(i,file="ut_i.txt",append=TRUE)
test<-glmer.nb(as.numeric(B[i,])~P$Group+P$Treatment+P$Group*P$Treatment+(1|P$ID),
control=glmerControl(optimizer = "bobyqa",optCtrl=list(maxfun=1e20)))
print(i)
coef(summary(test))[4,4]
}
})
coef(summary(test))
registerDoMC(cores=4)
write.table(i,file="ut_i.txt",append=TRUE)
system.time({
p <- foreach(i = 1:nn, .combine=c) %dopar% {
write.table(i,file="ut_i.txt",append=TRUE,row.names=FALSE,col.names=FALSE,quote=FALSE)
test<-glmer.nb(as.numeric(B[i,])~P$Group+P$Treatment+P$Group*P$Treatment+(1|P$ID),
control=glmerControl(optimizer = "bobyqa",optCtrl=list(maxfun=1e20)))
print(i)
coef(summary(test))[5:6,4]
}
})
write.table(i,file="ut_i.txt")
system.time({
p <- foreach(i = 1:nn, .combine=c) %dopar% {
write.table(i,file="ut_i.txt",append=TRUE,row.names=FALSE,col.names=FALSE,quote=FALSE)
test<-glmer.nb(as.numeric(B[i,])~P$Group+P$Treatment+P$Group*P$Treatment+(1|P$ID),
control=glmerControl(optimizer = "bobyqa",optCtrl=list(maxfun=1e20)))
print(i)
coef(summary(test))[5:6,4]
}
})
fdr<-p.adjust(p,"fdr")
o<-order(p)
hist(p)
hist(p,100)
hist(p[seq(1,length(p),2)],100)
hist(p[seq(2,length(p),2)],100)
p.ctrl.fish<-p[seq(1,length(p),2)]
p.krill.fish<-p[seq(1,length(p),2)]
fdr.ctrl.fish<-p.adjust(p.ctrl.fish,"fdr")
fdr.krill.fish<-p.adjust(p.krill.fish,"fdr")
o<-order(p.krill.fish)
hist(p,100)
#genes2<-genes[(1:12000)[-c(3191)]]
genes2<-genes
#BB<-B[(1:12000)[-c(3191)],]
BB<-B
o<-order(p.ctrl.fish)
pdf("Gene-plots-top100-fish_vs_control-glmernb.pdf")
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(BB[k,v1[1]],BB[k,v2[1]]),ylim=c(0,max(BB[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes2[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(1,2),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(3,4),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p[k],digits=1)),c(paste("fdr=",format(fdr[k],digits=1)))))
}
graphics.off()
hist(p.ctrl.fish,100)
hist(p.ctrl.fish,100)
hist(p.krill.fish,100)
p.ctrl.fish<-p[seq(1,length(p),2)]
p.krill.fish<-p[seq(2,length(p),2)]
fdr.ctrl.fish<-p.adjust(p.ctrl.fish,"fdr")
fdr.krill.fish<-p.adjust(p.krill.fish,"fdr")
o<-order(p.ctrl.fish)
hist(p.ctrl.fish,100)
hist(p.krill.fish,100)
genes2<-genes
#BB<-B[(1:12000)[-c(3191)],]
BB<-B
pdf("Gene-plots-top100-fish_vs_control-glmernb.pdf")
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(BB[k,v1[1]],BB[k,v2[1]]),ylim=c(0,max(BB[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes2[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(1,2),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(3,4),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p[k],digits=1)),c(paste("fdr=",format(fdr[k],digits=1)))))
}
graphics.off()
pdf("Gene-plots-top100-fish_vs_control-glmernb.pdf")
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(BB[k,v1[1]],BB[k,v2[1]]),ylim=c(0,max(BB[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes2[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(1,2),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(3,4),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.ctrl.fish[k],digits=1)),c(paste("fdr=",format(fdr.ctrl.fish[k],digits=1)))))
}
graphics.off()
write.table(genes[o[1:100]],file="sig-genes-fish-vs-ctrl.txt",sep="\t",row.names=TRUE,col.names=TRUE,quote=TRUE)
write.table(genes[o[1:100]],file="sig-genes-fish-vs-ctrl.txt",sep="\t",row.names=FALSE,col.names=FALSE,quote=FALSE)
fdr.ctrl.fish[1:1000]
fdr.ctrl.fish[1:100]
fdr.ctrl.fish[o[1:100]]
fdr.ctrl.fish[o[1:200]]
write.table(genes[o[1:500]],file="sig-genes-fish-vs-ctrl.txt",sep="\t",row.names=FALSE,col.names=FALSE,quote=FALSE)
fdr.ctrl.fish[o[500]]
fdr.ctrl.fish[o[200]]
fdr.ctrl.fish[o[150]]
14120+65300+19100+750*15+31200
(14120+65300+19100+750*15+31200)*1.25
o<-order(p.fish.krill)
o<-order(p.krill.fish)
pdf("Gene-plots-top100-krill_vs_fish-glmernb.pdf")
o<-order(p.krill.fish)
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes2[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(1,2),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(3,4),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.krill.fish[k],digits=1)),c(paste("fdr=",format(fdr.krill.fish[k],digits=1)))))
}
graphics.off()
pdf("Gene-plots-top100-krill_vs_fish-glmernb.pdf")
o<-order(p.krill.fish)
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(1,2),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(3,4),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.krill.fish[k],digits=1)),c(paste("fdr=",format(fdr.krill.fish[k],digits=1)))))
}
graphics.off()
p.ctrl.fish<-p[seq(1,length(p),2)]
p.krill.fish<-p[seq(2,length(p),2)]
fdr.ctrl.fish<-p.adjust(p.ctrl.fish,"fdr")
fdr.krill.fish<-p.adjust(p.krill.fish,"fdr")
o<-order(p.ctrl.fish)
hist(p.ctrl.fish,100)
hist(p.krill.fish,100)
#genes2<-genes[(1:12000)[-c(3191)]]
genes2<-genes
#BB<-B[(1:12000)[-c(3191)],]
BB<-B
o<-order(p.ctrl.fish)
pdf("Gene-plots-top100-fish_vs_control-glmernb.pdf")
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(BB[k,v1[1]],BB[k,v2[1]]),ylim=c(0,max(BB[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes2[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(1,2),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(3,4),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.ctrl.fish[k],digits=1)),c(paste("fdr=",format(fdr.ctrl.fish[k],digits=1)))))
}
graphics.off()
write.table(genes[o[1:500]],file="sig-genes-fish-vs-ctrl.txt",sep="\t",row.names=FALSE,col.names=FALSE,quote=FALSE)
#w1<-B[k,v2]-B[k,v1]
#v1<-which(P$Group==2 & P$Treatment=="V0")
#v2<-which(P$Group==2 & P$Treatment=="V4")
#w2<-B[k,v2]-B[k,v1]
#ww<-c(w1,w2)
#plot(rep(1,length(w1)),w1,xlim=c(0,3),ylim=c(min(ww),max(ww)),
#   xaxt="n",pch=20,col="red",main=paste("Gene symbol:",as.character(genes[k])),xlab="",ylab="Expression value\n after-before")
#points(rep(2,length(w2)),w2,pch=20)
#axis(side=1,at=c(1,2),labels=c("Group1","Group2"))
#legend("topright",c(paste("p=",format(p[k],digits=1)),c(paste("fdr=",format(fdr[k],digits=1)))))
#}
#graphics.off()
pdf("Gene-plots-top100-krill_vs_fish-glmernb.pdf")
o<-order(p.krill.fish)
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(1,2),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(3,4),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.krill.fish[k],digits=1)),c(paste("fdr=",format(fdr.krill.fish[k],digits=1)))))
}
graphics.off()
p.ctrl.fish<-p[seq(1,length(p),2)]
p.krill.fish<-p[seq(2,length(p),2)]
fdr.ctrl.fish<-p.adjust(p.ctrl.fish,"fdr")
fdr.krill.fish<-p.adjust(p.krill.fish,"fdr")
o<-order(p.ctrl.fish)
hist(p.ctrl.fish,100)
hist(p.krill.fish,100)
#genes2<-genes[(1:12000)[-c(3191)]]
genes2<-genes
#BB<-B[(1:12000)[-c(3191)],]
BB<-B
o<-order(p.ctrl.fish)
pdf("Gene-plots-top100-fish_vs_control-glmernb.pdf")
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(BB[k,v1[1]],BB[k,v2[1]]),ylim=c(0,max(BB[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes2[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(1,2),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(3,4),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.ctrl.fish[k],digits=1)),c(paste("fdr=",format(fdr.ctrl.fish[k],digits=1)))))
}
graphics.off()
write.table(genes[o[1:500]],file="sig-genes-fish-vs-ctrl.txt",sep="\t",row.names=FALSE,col.names=FALSE,quote=FALSE)
#w1<-B[k,v2]-B[k,v1]
#v1<-which(P$Group==2 & P$Treatment=="V0")
#v2<-which(P$Group==2 & P$Treatment=="V4")
#w2<-B[k,v2]-B[k,v1]
#ww<-c(w1,w2)
#plot(rep(1,length(w1)),w1,xlim=c(0,3),ylim=c(min(ww),max(ww)),
#   xaxt="n",pch=20,col="red",main=paste("Gene symbol:",as.character(genes[k])),xlab="",ylab="Expression value\n after-before")
#points(rep(2,length(w2)),w2,pch=20)
#axis(side=1,at=c(1,2),labels=c("Group1","Group2"))
#legend("topright",c(paste("p=",format(p[k],digits=1)),c(paste("fdr=",format(fdr[k],digits=1)))))
#}
#graphics.off()
pdf("Gene-plots-top100-krill_vs_fish-glmernb.pdf")
o<-order(p.krill.fish)
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(1,2),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(3,4),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.krill.fish[k],digits=1)),c(paste("fdr=",format(fdr.krill.fish[k],digits=1)))))
}
graphics.off()
p.ctrl.fish[1:10]
p.fish.krill[1:10]
p.krill.fish[1:10]
o<-order(p.ctrl.fish)
pdf("Gene-plots-top100-fish_vs_control-glmernb.pdf")
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(BB[k,v1[1]],BB[k,v2[1]]),ylim=c(0,max(BB[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes2[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(1,2),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(BB[k,v1[i]],BB[k,v2[i]]))
lines(c(3,4),c(mean(BB[k,v1]),mean(BB[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.ctrl.fish[k],digits=1)),c(paste("fdr=",format(fdr.ctrl.fish[k],digits=1)))))
}
graphics.off()
o[1]
pdf("Gene-plots-top100-krill_vs_fish-glmernb.pdf")
o<-order(p.krill.fish)
for (i in 1:100){
k<-o[i]
v1<-which(P$Group==1 & P$Treatment=="V0")
v2<-which(P$Group==1 & P$Treatment=="V4")
plot(c(1,2),c(B[k,v1[1]],B[k,v2[1]]),ylim=c(0,max(B[k,])),xlim=c(0.5,4.5),
main=paste("Gene:",as.character(genes[k])),xlab="",ylab="Normalized count",xaxt="n",pch="")
par(cex=0.7)
axis(side=1,at=1:4,labels=c("Fish, before","Fish, after","Control, before","Control, after"),
las=2)
par(cex=1)
for (i in 1:length(v1)) lines(c(1,2),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(1,2),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
v1<-which(P$Group==2 & P$Treatment=="V0")
v2<-which(P$Group==2 & P$Treatment=="V4")
for (i in 1:length(v1)) lines(c(3,4),c(B[k,v1[i]],B[k,v2[i]]))
lines(c(3,4),c(mean(B[k,v1]),mean(B[k,v2])),lwd=3,col="blue")
legend("topright",c(paste("p=",format(p.krill.fish[k],digits=1)),c(paste("fdr=",format(fdr.krill.fish[k],digits=1)))))
}
graphics.off()
o[1]
o<-order(p.krill.fish)
o[1]
o<-order(p.ctrl.fish)
o[1]
res <- Kappa.test(matrix(c(20, 10, 5, 15), 2, 2))
str(res)
print(res)
install.packages("fmsb")
library(fmsb)
res <- Kappa.test(matrix(c(20, 10, 5, 15), 2, 2))
str(res)
print(res)
res <- Kappa.test(matrix(c(20, 10, 5, 15), 2, 2),matrix(c(20, 12, 15, 15), 2, 2))
str(res)
print(res)
res <- Kappa.test(x=matrix(c(20, 10, 5, 15), 2, 2),y=matrix(c(20, 12, 15, 15), 2, 2))
str(res)
print(res)
res <- Kappa.test(x=matrix(c(20, 10, 5, 15), 2, 2),y=matrix(c(10, 12, 15, 15), 2, 2))
str(res)
print(res)
data(anxiety)
install.packages("irr")
library(irr)
data(anxiety)
data(video)
video
data(anxiety)
anxiety
iota(ratings, scaledata = c("quantitative","nominal"),
standardize = FALSE)
data("ratings")
photo <- list()
photo[[1]] <- cbind(c( 71, 73, 86, 59, 71),  # weight ratings
c( 74, 80,101, 62, 83),
c( 76, 80, 93, 66, 77))
photo[[2]] <- cbind(c(166,160,187,161,172),  # height rating
c(171,170,174,163,182),
c(171,165,185,162,181))
iota(photo)
data(diagnoses)
iota(list(diagnoses))
kappam.fleiss(diagnoses, exact=TRUE)
photo[[1]]
iota(photo)
kappam.fleiss(photo)
diagnoses
list(diagnoses)
?kappam.fleiss
?iota
?iota
photo
iota(photo)
setwd("/Users/stalenygard/neuroblastoma/mutfiles")
#BiocManager::install("goseq")
library(goseq)
library(GO.db)
files<-list.files()
files<-files[1:28]
files
#syms<-as.character(L$SYMBOL[ix])
library(org.Hs.eg.db)
xx <- as.list(org.Hs.egENSEMBL2EG)
genes<-unlist(xx)
x2 <- as.list(org.Hs.egSYMBOL2EG)
syms <- unlist(x2)
yy<- as.list(org.Hs.egGO2ALLEGS)
gos<-list()
for (i in 1:28){
print(i)
L<-read.table(files[i],sep="\t",header=TRUE,quote="")
ix<-grep("NONCODING",L$TIER)
ens.sig<-as.character(L$ENSEMBL_GENE_ID[ix])
sym.sig<-as.character(L$SYMBOL[ix])
all.genes<-unlist(xx)
all.genes[1:length(all.genes)]<-0
all.genes[match(ens.sig,names(all.genes))]<-1
all.genes<-as.numeric(all.genes)
names(all.genes)<-names(unlist(xx))
pwf=nullp(all.genes,"hg19","ensGene")
go=goseq(pwf,"hg19","ensGene")
go$genes<-rep(NA,nrow(go))
sig.go<-which(go$over<0.05)
print(length(sig.go))
for (j in 1:length(sig.go)){
ix<-match(go[j,1],names(yy))
ixx<-match(unlist(yy[ix]),syms)
go.genes<-names(syms)[ixx]
go$genes[j]<-paste(intersect(go.genes,sym.sig),collapse=" ")
}
gos[[i]]<-go
}
sig.gos<-NULL
for (i in 1:length(gos)){
ix<-which(gos[[i]]$over<0.05)
sig.gos<-c(sig.gos,gos[[i]]$cat[ix])
}
o<-order(table(sig.gos),decreasing=TRUE)
ordered.gos<-names(table(sig.gos)[o])
n<-500
p<-length(files)
A<-B<-matrix(NA,n,p)
for (i in 1:n){
go.id<-ordered.gos[i]
for (j in 1:p){
ix<-match(go.id,gos[[j]]$category)
A[i,j]<-gos[[j]]$over[ix]
if(is.na(gos[[j]]$genes[ix])==FALSE) B[i,j]<-sort(gos[[j]]$genes[ix])
}
}
pat.id<-rep(NA,p)
for(i in 1:10) pat.id[i]<-substr(files[i],1,14)
for(i in 11:15) pat.id[i]<-substr(files[i],1,12)
for(i in 16:28) pat.id[i]<-substr(files[i],1,10)
D<-NULL
for (i in 1:ncol(A)){
D<-cbind(D,"",B[,i],A[,i])
}
goterms <- Term(GOTERM)[match(ordered.gos[1:n],names(Term(GOTERM)))]
n.genes.goterms<-rep(NA,n)
for (i in 1:n) n.genes.goterms[i]<-length(yy[[match(ordered.gos[i],names(yy))]])
D<-cbind(goterms,ordered.gos[1:n],table(sig.gos)[o][1:n],n.genes.goterms,D)
#row.names(D)<-ordered.gos[1:n]
colnames(D)<-c("GO term name","GO id","Number of patients for which the GO term was significant","Number of genes in GO term",rep(pat.id,each=3))
colnames(D)[seq(6,ncol(D),3)]<-paste(colnames(D)[seq(6,ncol(D),3)],"(genes)")
colnames(D)[seq(7,ncol(D),3)]<-paste(colnames(D)[seq(7,ncol(D),3)],"(pval)")
colnames(D)[seq(5,ncol(D),3)]<-""
D[1,]
D[1,1:10]
D[27,1]
D[27,2]
D[27,3]
D[27,4]
D[91,4]
D[91,3]
D[91,2]
D[91,1]
D[90:93,1]
D[1:10,4]
which(as.numeric(D[,4])>10000)
which(as.numeric(D[,4])>10000)
ix<-which(as.numeric(D[,4])>30000)
length(ix)
ix
ix<-which(as.numeric(D[,4])>30000)
outfile<-"neuroblastoma-snv-noncoding-goseq-summary.txt"
write.table(D[-ix,],file=outfile,sep="\t",row.names=FALSE,col.names=TRUE,quote=FALSE)
